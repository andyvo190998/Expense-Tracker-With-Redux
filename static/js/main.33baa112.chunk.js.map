{"version":3,"sources":["components/Header.jsx","components/Balance.jsx","components/IncomeExpense.jsx","redux/types.js","components/TransactionList.jsx","redux/actions.js","components/AddTransaction.jsx","redux/reducer.js","Store.js","App.js","index.js"],"names":["Header","Balance","totalAmount","useSelector","state","transaction","map","amount","reduce","accumulator","currentValue","toFixed","IncomeExpense","amounts","income","filter","acc","current","expense","className","Math","abs","ADD_BALANCE","DELETE_BALANCE","EDIT_BALANCE","TransactionList","history","dispatch","useDispatch","sign","text","onClick","id","type","payload","AddTransaction","openUpdate","setOpenUpdate","updateObject","setUpdateObject","useState","setText","setAmount","name","age","email","htmlFor","value","onChange","e","target","placeholder","preventDefault","alert","floor","random","console","log","addBalance","initialState","update","reducer","action","updateSomething","item","store","createStore","composeWithDevTools","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33baa112.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <h2>\n            Expense Tracker App\n        </h2>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Balance = () => {\n    const yourBalance = useSelector((state) => (state.transaction));\n    const amount = yourBalance.map((state) => (state.amount));\n    const totalAmount = amount.reduce((accumulator, currentValue) => (accumulator += currentValue),0).toFixed(2);\n    // console.log(totalAmount)\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1>${totalAmount}</h1>\n        </>\n    )\n}\n\n\nexport default Balance\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst IncomeExpense = () => {\n    const yourTransaction = useSelector((transaction) => (transaction.transaction));\n    const amounts = yourTransaction.map((state) => (state.amount));\n    const income = amounts\n        .filter((amount) => (amount >= 0))\n        .reduce((acc, current) => (acc += current), 0)\n        .toFixed(2);\n\n    const expense = amounts\n        .filter((amount) => (amount < 0))\n        .reduce((acc, current) => (acc += current), 0)\n        .toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p className=\"money plus\">+${income}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p className=\"money minus\">-${Math.abs(expense)}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default IncomeExpense\n","export const ADD_BALANCE = 'ADD_BALANCE';\nexport const DELETE_BALANCE = 'DELETE_BALANCE';\nexport const EDIT_BALANCE = 'EDIT_BALANCE';\nexport const ADD_EDIT_BALANCE = 'ADD_EDIT_BALANCE';\n","import React, {useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteBalance, addEditBalance, editBalance } from '../redux/actions';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst TransactionList = () => {\n    const history = useSelector((state) => state.transaction);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <h3>History</h3>\n            <ul className=\"list\">\n                {history.map((transaction) => {\n                    const sign = transaction.amount < 0 ? '-' : \"+\"\n                    return (\n                        <li className={transaction.amount < 0 ? \"minus\" : \"plus\"} key={transaction.id}>\n                            {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\n                            <button onClick={() => dispatch(deleteBalance(transaction.id))} className=\"delete-btn\"><DeleteIcon /></button>\n                        </li>\n                    )\n                })}\n            </ul>\n        </>\n    )\n}\n\nexport default TransactionList\n// () => dispatch(deleteBalance(transaction.id))","import {ADD_BALANCE, ADD_EDIT_BALANCE, DELETE_BALANCE, EDIT_BALANCE} from './types';\n\n\nexport const addBalance = (amount = 1) => {\n    console.log(amount)\n    return {\n        type: ADD_BALANCE,\n        payload: amount\n    }\n};\n\nexport const deleteBalance = (id) => {\n    return {\n        type: DELETE_BALANCE,\n        payload: id\n    }\n};\nexport const editBalance = (object) => {\n    return {\n        type: EDIT_BALANCE,\n        payload: object\n    }\n}\n\nexport const addEditBalance = (object) => {\n    return {\n        type: ADD_EDIT_BALANCE,\n        payload: object\n    }\n}","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBalance } from '../redux/actions';\n\nconst AddTransaction = ({ openUpdate, setOpenUpdate, updateObject, setUpdateObject }) => {\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n    const dispatch = useDispatch();\n\n    const handleText = (e) => {\n        setText(() => e.target.value);\n    };\n\n    const handleAmount = (e) => {\n        setAmount(e.target.value);\n    };\n\n    const addTransaction = (e) => {\n        e.preventDefault();\n        if (text === '') {\n            alert('Please enter text ....')\n        } else {\n            const transaction = {\n                id: Math.floor(Math.random() * 1000),\n                text: text,\n                amount: +amount\n            }\n            dispatch(addBalance(transaction));\n            setText('');\n            setAmount(0);\n        }\n\n    };\n\n    const [test, setTest] = useState({\n        name: '',\n        age: '',\n        email: ''\n    })\n\n    return (\n        <>\n            <h3>Add new transaction</h3>\n            <form>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\">Text</label>\n                    <input value={text} onChange={handleText} type=\"text\" placeholder=\"Enter text...\" />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"amount\"\n                    >Amount <br />\n                        (negative - expense, positive - income)</label\n                    >\n                    <input value={amount} onChange={handleAmount} type=\"number\" placeholder=\"Enter amount...\" />\n                </div>\n                <button onClick={addTransaction} className=\"btn\">Add transaction</button>\n            </form>\n            <br />\n        </>\n    )\n}\n\nexport default AddTransaction\n","import {ADD_BALANCE, ADD_EDIT_BALANCE, DELETE_BALANCE, EDIT_BALANCE} from './types';\n\nconst initialState = {\n    transaction: [\n    { id: 1, text: 'Toys', amount: -20, update: false },\n    { id: 2, text: 'Salary', amount: 300, update: false },\n    { id: 3, text: 'Food', amount: -10.99, update: false },\n    { id: 4, text: 'Iphone', amount: 899, update: false }\n  ]\n//   editBalance: {}\n};\n\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_BALANCE: return {\n            ...state,\n            transaction: [action.payload, ...state.transaction]\n        }\n        case DELETE_BALANCE: return {\n            ...state,\n            transaction: state.transaction.filter((value) => (value.id !== action.payload))\n        }\n        // case ADD_EDIT_BALANCE: return {\n        //     ...state,\n        //     editBalance: action.payload\n        // }\n        case EDIT_BALANCE:\n            // let updateItem = state.transaction.filter((item) => item.id === action.payload.id)\n            // console.log(updateItem)\n            let updateSomething = state.transaction.map((item) => {\n                if(item.id === action.payload.id) {\n                    return {\n                        ...item,\n                        text: action.payload.text,\n                        amount: action.payload.amount\n                    }\n                } return item\n            })\n\n            console.log(updateSomething)\n\n        return {\n            ...state,\n            transaction: updateSomething\n\n        }\n        default: return state;\n    };\n};\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from './redux/reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(reducer, composeWithDevTools());\n\nexport default store;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport './app.css';\nimport IncomeExpense from './components/IncomeExpense';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport { Provider } from 'react-redux';\nimport store from './Store';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div>\n        <Header />\n        <div className=\"container\">\n          <Balance />\n          <IncomeExpense />\n          <TransactionList />\n          <AddTransaction />\n        </div>\n      </div>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}